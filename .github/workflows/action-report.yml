name: CI Pipeline for Report

env:
  DISABLE_SWAGGER: "true"

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test-and-build-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"

      - name: Build the Go application
        run: |
          go install github.com/swaggo/swag/cmd/swag@v1.8.12
          swag init
          go get -v
          CGO_ENABLED=0 go build -o ./test-api
          ls -lah

      - name: Run Go tests
        run: |
          TEST_MODE=true go test ./...

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.58.1

      - name: Run static and security checks
        continue-on-error: true
        run: |
          golangci-lint run ./... -v --out-format json > golangci-lint-report.json

      - name: Display golangci-lint report
        if: always()
        run: |
          echo "### golangci-lint Report ###"
          cat golangci-lint-report.json

      - name: Run tests and capture coverage
        run: |
          go test ./... -coverprofile=coverage.out
          go tool cover -func=coverage.out

      - name: Display coverage report
        if: always()
        run: |
          echo "### Test Coverage Report ###"
          go tool cover -func=coverage.out  > coverage.txt

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Generate Markdown report
        run: .deploy/generate_lint_report.sh golangci-lint-output.json > golangci-lint-output.md

      - name: Convert coverage to markdown
        run: |
          echo "# Code Coverage Report" > coverage.md
          echo '```' >> coverage.md
          cat coverage.txt >> coverage.md
          echo '```' >> coverage.md

      - name: Update Wiki pages with reports
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "# golangci-lint Report" > golangci-lint-report.wiki
          cat golangci-lint-report.md >> golangci-lint-report.wiki
          echo "" >> golangci-lint-report.wiki

          echo "# Test Coverage Report" > test-coverage-report.wiki
          cat coverage.md >> test-coverage-report.wiki
          echo "" >> test-coverage-report.wiki

          git config --global user.email "tan.tran@newhorizon-tech.vn"
          git config --global user.name "tan-tran-newhorizon"
          git clone https://${GH_TOKEN}@github.com/tan-tran-newhorizon/golang-project-workflow.wiki.git
          cd golang-project-workflow.wiki
          ls -l
          mv ../golangci-lint-report.wiki .
          mv ../test-coverage-report.wiki .
          git add golangci-lint-report.wiki test-coverage-report.wiki
          git commit -m "Update Wiki with golangci-lint and test coverage reports"
          git push origin master